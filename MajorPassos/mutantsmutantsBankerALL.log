1:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np |==> need.length < np
2:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np |==> need.length > np
3:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np |==> true
4:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:allocate.length != np |==> allocate.length < np
5:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:allocate.length != np |==> allocate.length > np
6:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:allocate.length != np |==> true
7:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np |==> need.length != np != (allocate.length != np)
8:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np |==> need.length != np
9:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np |==> allocate.length != np
10:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np |==> true
11:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:max.length != np |==> max.length < np
12:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:max.length != np |==> max.length > np
13:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:max.length != np |==> true
14:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np |==> (need.length != np || allocate.length != np) != (max.length != np)
15:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np |==> need.length != np || allocate.length != np
16:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np |==> max.length != np
17:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np |==> true
18:LVR:POS:0:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:1 |==> 0
19:LVR:POS:NEG:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:1 |==> -1
20:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:avail.length != 1 |==> avail.length < 1
21:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:avail.length != 1 |==> avail.length > 1
22:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:avail.length != 1 |==> true
23:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 |==> (need.length != np || allocate.length != np || max.length != np) != (avail.length != 1)
24:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 |==> need.length != np || allocate.length != np || max.length != np
25:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 |==> avail.length != 1
26:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 |==> true
27:LVR:0:POS:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> 1
28:LVR:0:NEG:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> -1
29:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need[0].length != nr |==> need[0].length < nr
30:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need[0].length != nr |==> need[0].length > nr
31:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need[0].length != nr |==> true
32:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr |==> (need.length != np || allocate.length != np || max.length != np || avail.length != 1) != (need[0].length != nr)
33:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr |==> need.length != np || allocate.length != np || max.length != np || avail.length != 1
34:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr |==> need[0].length != nr
35:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr |==> true
36:LVR:0:POS:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> 1
37:LVR:0:NEG:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> -1
38:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:allocate[0].length != nr |==> allocate[0].length < nr
39:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:allocate[0].length != nr |==> allocate[0].length > nr
40:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:allocate[0].length != nr |==> true
41:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr |==> (need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr) != (allocate[0].length != nr)
42:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr |==> need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr
43:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr |==> allocate[0].length != nr
44:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr |==> true
45:LVR:0:POS:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> 1
46:LVR:0:NEG:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> -1
47:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:max[0].length != nr |==> max[0].length < nr
48:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:max[0].length != nr |==> max[0].length > nr
49:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:max[0].length != nr |==> true
50:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr |==> (need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr) != (max[0].length != nr)
51:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr |==> need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr
52:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr |==> max[0].length != nr
53:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr |==> true
54:LVR:0:POS:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> 1
55:LVR:0:NEG:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:0 |==> -1
56:ROR:!=(int,int):<(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:avail[0].length != nr |==> avail[0].length < nr
57:ROR:!=(int,int):>(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:avail[0].length != nr |==> avail[0].length > nr
58:ROR:!=(int,int):TRUE(int,int):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:avail[0].length != nr |==> true
59:COR:||(boolean,boolean):!=(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr || avail[0].length != nr |==> (need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr) != (avail[0].length != nr)
60:COR:||(boolean,boolean):LHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):14:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr || avail[0].length != nr |==> need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr
61:COR:||(boolean,boolean):RHS(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr || avail[0].length != nr |==> avail[0].length != nr
62:COR:||(boolean,boolean):TRUE(boolean,boolean):banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):15:need.length != np || allocate.length != np || max.length != np || avail.length != 1 || need[0].length != nr || allocate[0].length != nr || max[0].length != nr || avail[0].length != nr |==> true
63:EVR:<IDENTIFIER(int[][])>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):18:need |==> null
64:EVR:<IDENTIFIER(int[][])>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):19:allocate |==> null
65:EVR:<IDENTIFIER(int[][])>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):20:max |==> null
66:EVR:<IDENTIFIER(int[][])>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):21:avail |==> null
67:EVR:<IDENTIFIER(int)>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):22:np |==> 0
68:EVR:<IDENTIFIER(int)>:<DEFAULT>:banker.Banker@<init>(int[][],int[][],int[][],int[][],int,int):23:nr |==> 0
69:LVR:0:POS:banker.Banker@calc_need():28:0 |==> 1
70:LVR:0:NEG:banker.Banker@calc_need():28:0 |==> -1
71:ROR:<(int,int):!=(int,int):banker.Banker@calc_need():28:i < np |==> i != np
72:ROR:<(int,int):<=(int,int):banker.Banker@calc_need():28:i < np |==> i <= np
73:ROR:<(int,int):FALSE(int,int):banker.Banker@calc_need():28:i < np |==> false
74:LVR:0:POS:banker.Banker@calc_need():29:0 |==> 1
75:LVR:0:NEG:banker.Banker@calc_need():29:0 |==> -1
76:ROR:<(int,int):!=(int,int):banker.Banker@calc_need():29:j < nr |==> j != nr
77:ROR:<(int,int):<=(int,int):banker.Banker@calc_need():29:j < nr |==> j <= nr
78:ROR:<(int,int):FALSE(int,int):banker.Banker@calc_need():29:j < nr |==> false
79:AOR:-(int,int):%(int,int):banker.Banker@calc_need():30:max[i][j] - allocate[i][j] |==> max[i][j] % allocate[i][j]
80:AOR:-(int,int):*(int,int):banker.Banker@calc_need():30:max[i][j] - allocate[i][j] |==> max[i][j] * allocate[i][j]
81:AOR:-(int,int):+(int,int):banker.Banker@calc_need():30:max[i][j] - allocate[i][j] |==> max[i][j] + allocate[i][j]
82:AOR:-(int,int):/(int,int):banker.Banker@calc_need():30:max[i][j] - allocate[i][j] |==> max[i][j] / allocate[i][j]
83:STD:<ASSIGN>:<NO-OP>:banker.Banker@calc_need():30:need[i][j] = max[i][j] - allocate[i][j] |==> <NO-OP>
84:EVR:<IDENTIFIER(int[][])>:<DEFAULT>:banker.Banker@calc_need():33:need |==> null
85:LVR:0:POS:banker.Banker@check(int):39:0 |==> 1
86:LVR:0:NEG:banker.Banker@check(int):39:0 |==> -1
87:ROR:<(int,int):!=(int,int):banker.Banker@check(int):39:j < nr |==> j != nr
88:ROR:<(int,int):<=(int,int):banker.Banker@check(int):39:j < nr |==> j <= nr
89:ROR:<(int,int):FALSE(int,int):banker.Banker@check(int):39:j < nr |==> false
90:LVR:0:POS:banker.Banker@check(int):40:0 |==> 1
91:LVR:0:NEG:banker.Banker@check(int):40:0 |==> -1
92:ROR:<(int,int):!=(int,int):banker.Banker@check(int):40:avail[0][j] < need[i][j] |==> avail[0][j] != need[i][j]
93:ROR:<(int,int):<=(int,int):banker.Banker@check(int):40:avail[0][j] < need[i][j] |==> avail[0][j] <= need[i][j]
94:ROR:<(int,int):FALSE(int,int):banker.Banker@check(int):40:avail[0][j] < need[i][j] |==> false
95:LVR:FALSE:TRUE:banker.Banker@check(int):41:false |==> true
96:STD:<RETURN>:<NO-OP>:banker.Banker@check(int):41:return Config.__M_NO == 0 && Config.COVERED(95, 95) ? false : Config.__M_NO == 95 ? true : false; |==> <NO-OP>
97:LVR:TRUE:FALSE:banker.Banker@check(int):44:true |==> false
98:STD:<CALL>:<NO-OP>:banker.Banker@isSafe():49:calc_need() |==> <NO-OP>
99:EVR:<NEW_ARRAY(boolean[])>:<DEFAULT>:banker.Banker@isSafe():50:new boolean[np] |==> null
100:LVR:0:POS:banker.Banker@isSafe():51:0 |==> 1
101:LVR:0:NEG:banker.Banker@isSafe():51:0 |==> -1
102:ROR:<(int,int):!=(int,int):banker.Banker@isSafe():53:j < np |==> j != np
103:ROR:<(int,int):<=(int,int):banker.Banker@isSafe():53:j < np |==> j <= np
104:ROR:<(int,int):FALSE(int,int):banker.Banker@isSafe():53:j < np |==> false
105:LVR:FALSE:TRUE:banker.Banker@isSafe():54:false |==> true
106:LVR:0:POS:banker.Banker@isSafe():55:0 |==> 1
107:LVR:0:NEG:banker.Banker@isSafe():55:0 |==> -1
108:ROR:<(int,int):!=(int,int):banker.Banker@isSafe():55:i < np |==> i != np
109:ROR:<(int,int):<=(int,int):banker.Banker@isSafe():55:i < np |==> i <= np
110:ROR:<(int,int):FALSE(int,int):banker.Banker@isSafe():55:i < np |==> false
111:COR:&&(boolean,boolean):==(boolean,boolean):banker.Banker@isSafe():56:!done[i] && check(i) |==> !done[i] == check(i)
112:COR:&&(boolean,boolean):FALSE(boolean,boolean):banker.Banker@isSafe():56:!done[i] && check(i) |==> false
113:COR:&&(boolean,boolean):LHS(boolean,boolean):banker.Banker@isSafe():56:!done[i] && check(i) |==> !done[i]
114:COR:&&(boolean,boolean):RHS(boolean,boolean):banker.Banker@isSafe():56:!done[i] && check(i) |==> check(i)
115:LVR:0:POS:banker.Banker@isSafe():57:0 |==> 1
116:LVR:0:NEG:banker.Banker@isSafe():57:0 |==> -1
117:ROR:<(int,int):!=(int,int):banker.Banker@isSafe():57:k < nr |==> k != nr
118:ROR:<(int,int):<=(int,int):banker.Banker@isSafe():57:k < nr |==> k <= nr
119:ROR:<(int,int):FALSE(int,int):banker.Banker@isSafe():57:k < nr |==> false
120:LVR:0:POS:banker.Banker@isSafe():58:0 |==> 1
121:LVR:0:NEG:banker.Banker@isSafe():58:0 |==> -1
122:LVR:0:POS:banker.Banker@isSafe():58:0 |==> 1
123:LVR:0:NEG:banker.Banker@isSafe():58:0 |==> -1
124:AOR:-(int,int):%(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] |==> avail[0][k] % need[i][k]
125:AOR:-(int,int):*(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] |==> avail[0][k] * need[i][k]
126:AOR:-(int,int):+(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] |==> avail[0][k] + need[i][k]
127:AOR:-(int,int):/(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] |==> avail[0][k] / need[i][k]
128:AOR:+(int,int):%(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] + max[i][k] |==> (avail[0][k] - need[i][k]) % max[i][k]
129:AOR:+(int,int):*(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] + max[i][k] |==> (avail[0][k] - need[i][k]) * max[i][k]
130:AOR:+(int,int):-(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] + max[i][k] |==> avail[0][k] - need[i][k] - max[i][k]
131:AOR:+(int,int):/(int,int):banker.Banker@isSafe():58:avail[0][k] - need[i][k] + max[i][k] |==> (avail[0][k] - need[i][k]) / max[i][k]
132:STD:<ASSIGN>:<NO-OP>:banker.Banker@isSafe():58:avail[0][k] = avail[0][k] - need[i][k] + max[i][k] |==> <NO-OP>
133:STD:<CALL>:<NO-OP>:banker.Banker@isSafe():60:System.out.println("Allocated process : " + i) |==> <NO-OP>
134:LVR:TRUE:FALSE:banker.Banker@isSafe():61:true |==> false
135:STD:<ASSIGN>:<NO-OP>:banker.Banker@isSafe():61:allocated = done[i] = true |==> <NO-OP>
136:STD:<INC>:<NO-OP>:banker.Banker@isSafe():62:j++ |==> <NO-OP>
137:COR:allocated:TRUE:banker.Banker@isSafe():65:allocated |==> false
138:COR:allocated:FALSE:banker.Banker@isSafe():65:allocated |==> true
139:STD:<BREAK>:<NO-OP>:banker.Banker@isSafe():66:break; |==> <NO-OP>
140:ROR:==(int,int):<=(int,int):banker.Banker@isSafe():69:j == np |==> j <= np
141:ROR:==(int,int):>=(int,int):banker.Banker@isSafe():69:j == np |==> j >= np
142:ROR:==(int,int):FALSE(int,int):banker.Banker@isSafe():69:j == np |==> false
